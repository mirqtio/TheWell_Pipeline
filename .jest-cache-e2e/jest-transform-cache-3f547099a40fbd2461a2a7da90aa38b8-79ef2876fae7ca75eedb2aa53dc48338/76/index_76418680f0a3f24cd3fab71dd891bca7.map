{"version":3,"names":["SOURCE_TYPES","STATIC","SEMI_STATIC","DYNAMIC_CONSISTENT","DYNAMIC_UNSTRUCTURED","VISIBILITY_LEVELS","INTERNAL","EXTERNAL","RESTRICTED","PROCESSING_STATUS","PENDING","IN_PROGRESS","COMPLETED","FAILED","REQUIRES_REVIEW","APPROVED","REJECTED","BaseSourceHandler","constructor","config","logger","initialize","Error","validateConfig","discover","extract","document","transform","content","cleanup","module","exports"],"sources":["index.js"],"sourcesContent":["/**\n * Core types and interfaces for the ingestion system\n */\n\n/**\n * Source types supported by the ingestion engine\n */\nconst SOURCE_TYPES = {\n  STATIC: 'static',                    // One-time bulk loads\n  SEMI_STATIC: 'semi-static',         // Weekly polling (platform policies)\n  DYNAMIC_CONSISTENT: 'dynamic-consistent',  // Daily batch processing\n  DYNAMIC_UNSTRUCTURED: 'dynamic-unstructured' // Weekly discovery runs\n};\n\n/**\n * Document visibility levels\n */\nconst VISIBILITY_LEVELS = {\n  INTERNAL: 'internal',\n  EXTERNAL: 'external',\n  RESTRICTED: 'restricted'\n};\n\n/**\n * Processing status for ingestion jobs\n */\nconst PROCESSING_STATUS = {\n  PENDING: 'pending',\n  IN_PROGRESS: 'in-progress',\n  COMPLETED: 'completed',\n  FAILED: 'failed',\n  REQUIRES_REVIEW: 'requires-review',\n  APPROVED: 'approved',\n  REJECTED: 'rejected'\n};\n\n/**\n * Source configuration schema\n * @typedef {Object} SourceConfig\n * @property {string} id - Unique identifier for the source\n * @property {string} name - Human-readable name\n * @property {string} type - Source type from SOURCE_TYPES\n * @property {string} description - Description of the source\n * @property {Object} config - Source-specific configuration\n * @property {string} visibility - Default visibility level\n * @property {boolean} enabled - Whether the source is active\n * @property {Object} schedule - Scheduling configuration\n * @property {Object} authentication - Auth configuration if needed\n * @property {Array<string>} tags - Tags for categorization\n */\n\n/**\n * Document metadata schema\n * @typedef {Object} DocumentMetadata\n * @property {string} sourceId - Source identifier\n * @property {string} sourceType - Type of source\n * @property {string} originalUrl - Original document URL/path\n * @property {string} title - Document title\n * @property {string} contentType - MIME type\n * @property {number} size - Document size in bytes\n * @property {Date} lastModified - Last modification date\n * @property {Date} ingestionDate - When document was ingested\n * @property {string} visibility - Visibility level\n * @property {Object} customMetadata - Source-specific metadata\n * @property {Array<string>} tags - Document tags\n */\n\n/**\n * Ingestion job schema\n * @typedef {Object} IngestionJob\n * @property {string} id - Unique job identifier\n * @property {string} sourceId - Source identifier\n * @property {string} status - Current processing status\n * @property {Date} createdAt - Job creation timestamp\n * @property {Date} updatedAt - Last update timestamp\n * @property {Object} payload - Job-specific data\n * @property {Object} result - Processing result\n * @property {Array<Object>} errors - Any errors encountered\n * @property {Object} metrics - Processing metrics\n */\n\n/**\n * Base source handler interface\n * All source handlers must implement these methods\n */\nclass BaseSourceHandler {\n  constructor(config) {\n    this.config = config;\n    this.logger = null; // Will be injected\n  }\n\n  /**\n   * Initialize the handler\n   * @returns {Promise<void>}\n   */\n  async initialize() {\n    throw new Error('initialize() must be implemented by subclass');\n  }\n\n  /**\n   * Validate source configuration\n   * @param {SourceConfig} config - Source configuration\n   * @returns {Promise<boolean>}\n   */\n  async validateConfig(config) {\n    throw new Error('validateConfig() must be implemented by subclass');\n  }\n\n  /**\n   * Discover available documents/content\n   * @returns {Promise<Array<Object>>}\n   */\n  async discover() {\n    throw new Error('discover() must be implemented by subclass');\n  }\n\n  /**\n   * Extract content from a specific document\n   * @param {Object} document - Document reference\n   * @returns {Promise<Object>}\n   */\n  async extract(document) {\n    throw new Error('extract() must be implemented by subclass');\n  }\n\n  /**\n   * Transform extracted content to standard format\n   * @param {Object} content - Raw extracted content\n   * @returns {Promise<Object>}\n   */\n  async transform(content) {\n    throw new Error('transform() must be implemented by subclass');\n  }\n\n  /**\n   * Clean up resources\n   * @returns {Promise<void>}\n   */\n  async cleanup() {\n    // Default implementation - can be overridden\n  }\n}\n\nmodule.exports = {\n  SOURCE_TYPES,\n  VISIBILITY_LEVELS,\n  PROCESSING_STATUS,\n  BaseSourceHandler\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,YAAY,GAAG;EACnBC,MAAM,EAAE,QAAQ;EAAqB;EACrCC,WAAW,EAAE,aAAa;EAAU;EACpCC,kBAAkB,EAAE,oBAAoB;EAAG;EAC3CC,oBAAoB,EAAE,sBAAsB,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;AACA,MAAMC,iBAAiB,GAAG;EACxBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE;AACd,CAAC;;AAED;AACA;AACA;AACA,MAAMC,iBAAiB,GAAG;EACxBC,OAAO,EAAE,SAAS;EAClBC,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAE,WAAW;EACtBC,MAAM,EAAE,QAAQ;EAChBC,eAAe,EAAE,iBAAiB;EAClCC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,CAAC;EACtBC,WAAWA,CAACC,MAAM,EAAE;IAClB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,MAAM,GAAG,IAAI,CAAC,CAAC;EACtB;;EAEA;AACF;AACA;AACA;EACE,MAAMC,UAAUA,CAAA,EAAG;IACjB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMC,cAAcA,CAACJ,MAAM,EAAE;IAC3B,MAAM,IAAIG,KAAK,CAAC,kDAAkD,CAAC;EACrE;;EAEA;AACF;AACA;AACA;EACE,MAAME,QAAQA,CAAA,EAAG;IACf,MAAM,IAAIF,KAAK,CAAC,4CAA4C,CAAC;EAC/D;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMG,OAAOA,CAACC,QAAQ,EAAE;IACtB,MAAM,IAAIJ,KAAK,CAAC,2CAA2C,CAAC;EAC9D;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMK,SAASA,CAACC,OAAO,EAAE;IACvB,MAAM,IAAIN,KAAK,CAAC,6CAA6C,CAAC;EAChE;;EAEA;AACF;AACA;AACA;EACE,MAAMO,OAAOA,CAAA,EAAG;IACd;EAAA;AAEJ;AAEAC,MAAM,CAACC,OAAO,GAAG;EACf/B,YAAY;EACZK,iBAAiB;EACjBI,iBAAiB;EACjBQ;AACF,CAAC","ignoreList":[]}