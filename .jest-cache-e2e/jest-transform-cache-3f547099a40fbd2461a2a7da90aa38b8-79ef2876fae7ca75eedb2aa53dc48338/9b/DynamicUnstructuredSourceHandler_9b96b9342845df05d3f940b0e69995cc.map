{"version":3,"names":["axios","require","crypto","puppeteer","BaseSourceHandler","SOURCE_TYPES","VISIBILITY_LEVELS","DynamicUnstructuredSourceHandler","constructor","config","httpClient","discoveredUrls","Set","lastDiscoveryTime","browser","initialize","logger","info","sourceId","id","targets","Array","isArray","Error","create","timeout","headers","userAgent","authentication","_configureAuthentication","Date","now","length","launch","headless","args","error","message","validateConfig","required","missing","filter","field","join","target","name","type","selectors","requiredSelectors","missingSelectors","selector","discover","targetsCount","allDocuments","debug","targetName","targetType","documents","_discoverWebCrawl","_discoverSitemap","_discoverSearchApi","_discoverSocialMedia","_discoverRssFeeds","warn","forEach","doc","metadata","push","documentsFound","rateLimitMs","_sleep","uniqueDocuments","_deduplicateDocuments","totalFound","extract","document","documentId","url","page","newPage","goto","waitUntil","_findTargetForDocument","extractedContent","title","Object","keys","extractedData","_evaluateSelectors","content","author","publishDate","String","evaluate","body","querySelector","textContent","trim","filters","contentFilters","isValid","_validateContent","extractedAt","extractionMethod","filtered","filterReason","_getFilterReason","contentHash","createHash","update","digest","contentLength","close","transform","_cleanContent","transformed","transformedAt","wordCount","_countWords","characterCount","discoveredAt","requiresReview","_requiresManualReview","startUrls","maxDepth","maxPages","allowedDomains","visitedUrls","urlQueue","map","depth","shift","has","add","crawling","respectRobots","allowed","_checkRobotsTxt","links","anchors","from","querySelectorAll","a","href","text","link","_generateDocumentId","lastModified","sourceType","DYNAMIC_UNSTRUCTURED","originalUrl","visibility","EXTERNAL","filteredLinks","_isAllowedDomain","crawlDelayMs","sitemapUrl","maxUrls","response","get","sitemapContent","data","urls","_parseSitemap","limitedUrls","slice","urlInfo","_createDocumentFromUrl","lastmod","priority","changeFreq","changefreq","apiUrl","query","maxResults","params","q","limit","apiParams","results","items","result","_createDocumentFromSearchResult","seedUrls","feedUrls","_extractFeedUrls","feedUrl","feedType","parentUrl","additionalMetadata","_extractTitleFromHtml","_getTitleFromUrl","description","snippet","searchScore","score","searchQuery","_createDocumentFromPage","_extractFromHtml","html","_extractTextFromHtml","titleMatch","match","replace","_extractLinksFromHtml","baseUrl","linkMatches","hrefMatch","Boolean","startsWith","URL","sitemapXml","urlMatches","urlXml","loc","_extractXmlValue","item","feedLinks","linkTag","typeMatch","toLowerCase","includes","absoluteUrl","key","entries","elements","el","_handlePagination","collectUrls","targetConfig","paginationConfig","pagination","paginationSelector","nextSelector","currentPage","pageUrl","hasNextPage","waitForSelector","then","catch","Promise","all","waitForNavigation","click","xml","tagName","regex","RegExp","domain","hostname","some","pathname","split","pop","_extractTitleFromContent","lines","line","substring","seen","suspiciousPatterns","pattern","test","auth","defaults","common","token","username","password","headerName","identifier","word","ms","resolve","setTimeout","updateLastDiscoveryTime","timestamp","minWordCount","excludePatterns","lowerContent","requireKeywords","keyword","urlObj","robotsUrl","protocol","host","robotsContent","userAgentMatch","trimmed","disallowPath","_fetchRobotsTxt","_applyDelay","cleanup","clear","find","reasons","module","exports"],"sources":["DynamicUnstructuredSourceHandler.js"],"sourcesContent":["const axios = require('axios');\nconst crypto = require('crypto');\nconst puppeteer = require('puppeteer');\nconst { BaseSourceHandler, SOURCE_TYPES, VISIBILITY_LEVELS } = require('../types');\n\n/**\n * Dynamic Unstructured Source Handler\n * Handles weekly discovery runs for unstructured, dynamic content\n * Examples: Web scraping, social media monitoring, forum posts, news aggregation\n */\nclass DynamicUnstructuredSourceHandler extends BaseSourceHandler {\n  constructor(config) {\n    super(config);\n    this.httpClient = null;\n    this.discoveredUrls = new Set();\n    this.lastDiscoveryTime = null;\n    this.browser = null;\n  }\n\n  /**\n   * Initialize the dynamic unstructured source handler\n   */\n  async initialize() {\n    this.logger?.info('Initializing DynamicUnstructuredSourceHandler', { sourceId: this.config.id });\n    \n    // Validate required configuration\n    if (!this.config.config?.targets || !Array.isArray(this.config.config.targets)) {\n      throw new Error('DynamicUnstructuredSourceHandler requires config.targets array');\n    }\n\n    // Initialize HTTP client with default settings\n    this.httpClient = axios.create({\n      timeout: this.config.config.timeout || 45000,\n      headers: {\n        'User-Agent': this.config.config.userAgent || 'TheWell-Pipeline/1.0 (+https://thewell.ai)',\n        ...this.config.config.headers\n      }\n    });\n\n    // Add authentication if configured\n    if (this.config.authentication) {\n      this._configureAuthentication();\n    }\n\n    // Load last discovery time\n    this.lastDiscoveryTime = this.config.config.lastDiscoveryTime ? \n      new Date(this.config.config.lastDiscoveryTime) : \n      new Date(Date.now() - 7 * 24 * 60 * 60 * 1000); // Default to 7 days ago\n\n    this.logger?.info('DynamicUnstructuredSourceHandler initialized successfully', {\n      targets: this.config.config.targets.length,\n      lastDiscoveryTime: this.lastDiscoveryTime\n    });\n\n    // Initialize browser if not already done\n    if (!this.browser) {\n      try {\n        this.browser = await puppeteer.launch({\n          headless: true,\n          args: ['--no-sandbox', '--disable-setuid-sandbox']\n        });\n      } catch (error) {\n        this.logger?.error('Failed to initialize Puppeteer browser', { error: error.message });\n        throw error;\n      }\n    }\n  }\n\n  /**\n   * Validate dynamic unstructured source configuration\n   */\n  async validateConfig(config) {\n    const required = ['targets'];\n    const missing = required.filter(field => !config.config?.[field]);\n    \n    if (missing.length > 0) {\n      throw new Error(`Missing required config fields: ${missing.join(', ')}`);\n    }\n\n    // Validate targets\n    if (!Array.isArray(config.config.targets) || config.config.targets.length === 0) {\n      throw new Error('At least one target must be configured');\n    }\n\n    for (const target of config.config.targets) {\n      if (!target.name || !target.type) {\n        throw new Error('Target configuration invalid');\n      }\n      \n      // Validate selectors for web crawl targets\n      if (target.type === 'web-crawler' && target.selectors) {\n        const requiredSelectors = ['articleLinks'];\n        const missingSelectors = requiredSelectors.filter(selector => !target.selectors[selector]);\n        \n        if (missingSelectors.length > 0) {\n          throw new Error('Missing required selectors');\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Discover new documents using configured targets\n   */\n  async discover() {\n    this.logger?.info('Starting discovery for dynamic unstructured source', { \n      sourceId: this.config.id,\n      targetsCount: this.config.config.targets.length \n    });\n\n    const allDocuments = [];\n    const targets = this.config.config.targets;\n\n    for (const target of targets) {\n      try {\n        this.logger?.debug('Executing target', { \n          sourceId: this.config.id,\n          targetName: target.name,\n          targetType: target.type \n        });\n\n        let documents = [];\n        \n        switch (target.type) {\n        case 'web-crawler':\n          documents = await this._discoverWebCrawl(target);\n          break;\n        case 'sitemap':\n          documents = await this._discoverSitemap(target);\n          break;\n        case 'search-api':\n          documents = await this._discoverSearchApi(target);\n          break;\n        case 'social-media':\n          documents = await this._discoverSocialMedia(target);\n          break;\n        case 'rss-discovery':\n          documents = await this._discoverRssFeeds(target);\n          break;\n        default:\n          this.logger?.warn('Unknown target type', { \n            targetType: target.type,\n            targetName: target.name \n          });\n        }\n\n        // Add target metadata to documents\n        documents.forEach(doc => {\n          doc.metadata.target = target.name;\n          doc.metadata.targetType = target.type;\n        });\n\n        allDocuments.push(...documents);\n        \n        this.logger?.info('Target completed', { \n          targetName: target.name,\n          documentsFound: documents.length \n        });\n\n        // Rate limiting between targets\n        if (target.config.rateLimitMs) {\n          await this._sleep(target.config.rateLimitMs);\n        }\n      } catch (error) {\n        this.logger?.error('Target discovery failed', { \n          targetName: target.name,\n          error: error.message \n        });\n      }\n    }\n\n    // Deduplicate documents by URL\n    const uniqueDocuments = this._deduplicateDocuments(allDocuments);\n\n    this.logger?.info('Discovery completed', { \n      sourceId: this.config.id,\n      totalFound: allDocuments.length,\n      uniqueDocuments: uniqueDocuments.length \n    });\n\n    return uniqueDocuments;\n  }\n\n  /**\n   * Extract content from a discovered document\n   */\n  async extract(document) {\n    this.logger?.info('Extracting content from document', { \n      documentId: document.id,\n      url: document.url \n    });\n\n    // Initialize browser if not already done\n    if (!this.browser) {\n      await this.initialize();\n    }\n\n    const page = await this.browser.newPage();\n    \n    try {\n      await page.goto(document.url, { waitUntil: 'networkidle0', timeout: 30000 });\n      \n      // Extract content using selectors if configured\n      const target = this._findTargetForDocument(document);\n      const selectors = target?.selectors || {};\n      \n      let extractedContent = '';\n      let title = document.title;\n      \n      if (Object.keys(selectors).length > 0) {\n        // Extract all content using selectors in one evaluate call\n        const extractedData = await this._evaluateSelectors(page, selectors);\n        \n        // Handle test mock that returns object directly\n        if (typeof extractedData === 'object' && extractedData !== null) {\n          extractedContent = extractedData.content || '';\n          title = extractedData.title || title;\n          \n          if (extractedData.author) {\n            document.metadata.author = extractedData.author;\n          }\n          \n          if (extractedData.publishDate) {\n            document.metadata.publishDate = extractedData.publishDate;\n          }\n        } else {\n          extractedContent = String(extractedData || '');\n        }\n      } else {\n        // Fallback to body content\n        extractedContent = await page.evaluate(() => {\n          const body = document.querySelector('body');\n          return body ? body.textContent.trim() : '';\n        });\n      }\n\n      // Apply content filters\n      const filters = this.config.config.contentFilters || {};\n      \n      const isValid = this._validateContent(extractedContent, filters);\n      \n      if (!isValid) {\n        return {\n          ...document,\n          content: '',\n          extractedAt: new Date(),\n          metadata: {\n            ...document.metadata,\n            extractionMethod: 'puppeteer-scrape',\n            title: title,\n            filtered: true,\n            filterReason: this._getFilterReason(extractedContent, filters)\n          }\n        };\n      }\n\n      const contentHash = crypto.createHash('sha256').update(String(extractedContent)).digest('hex');\n\n      return {\n        id: document.id,\n        content: extractedContent,\n        contentHash,\n        extractedAt: new Date(),\n        metadata: {\n          ...document.metadata,\n          extractionMethod: 'puppeteer-scrape',\n          contentLength: extractedContent.length,\n          title: title\n        }\n      };\n    } catch (error) {\n      this.logger?.error('Content extraction failed', { \n        documentId: document.id,\n        url: document.url,\n        error: error.message \n      });\n      throw error;\n    } finally {\n      await page.close();\n    }\n  }\n\n  /**\n   * Transform extracted content to standard format\n   */\n  async transform(extractedContent) {\n    if (!extractedContent) {\n      return null;\n    }\n\n    this.logger?.debug('Transforming content', { \n      documentId: extractedContent.id \n    });\n\n    const content = this._cleanContent(extractedContent.content);\n    const title = extractedContent.metadata.title || 'Untitled';\n\n    const transformed = {\n      id: extractedContent.id,\n      title,\n      content,\n      contentHash: extractedContent.contentHash,\n      metadata: {\n        ...extractedContent.metadata,\n        transformedAt: new Date(),\n        wordCount: this._countWords(content),\n        characterCount: content.length,\n        discoveredAt: new Date(),\n        requiresReview: this._requiresManualReview(extractedContent)\n      }\n    };\n\n    return transformed;\n  }\n\n  /**\n   * Web crawler discovery\n   */\n  async _discoverWebCrawl(target) {\n    const { startUrls, maxDepth = 2, maxPages = 50, allowedDomains = [] } = target.config;\n    const documents = [];\n    const visitedUrls = new Set();\n    const urlQueue = startUrls.map(url => ({ url, depth: 0 }));\n\n    // Initialize browser if not already done\n    if (!this.browser) {\n      await this.initialize();\n    }\n\n    const page = await this.browser.newPage();\n    \n    try {\n      while (urlQueue.length > 0 && documents.length < maxPages) {\n        const { url, depth } = urlQueue.shift();\n        \n        if (visitedUrls.has(url) || depth > maxDepth) {\n          continue;\n        }\n\n        try {\n          visitedUrls.add(url);\n          \n          // Check robots.txt if enabled\n          if (this.config.config.crawling?.respectRobots) {\n            const allowed = await this._checkRobotsTxt(url);\n            if (!allowed) {\n              this.logger?.info('URL blocked by robots.txt', { url });\n              continue;\n            }\n          }\n          \n          await page.goto(url, { waitUntil: 'networkidle0', timeout: 30000 });\n          \n          // Extract links from the page using page.evaluate\n          const links = await page.evaluate(() => {\n            const anchors = Array.from(document.querySelectorAll('a[href]'));\n            return anchors.map(a => ({\n              href: a.href,\n              text: a.textContent.trim()\n            }));\n          });\n          \n          // Create documents from discovered links\n          for (const link of links) {\n            if (documents.length >= maxPages) break;\n            \n            const document = {\n              id: this._generateDocumentId(link.href),\n              url: link.href,\n              title: link.text,\n              lastModified: new Date(),\n              metadata: {\n                sourceId: this.config.id,\n                sourceType: SOURCE_TYPES.DYNAMIC_UNSTRUCTURED,\n                targetName: target.name,\n                originalUrl: link.href,\n                visibility: this.config.visibility || VISIBILITY_LEVELS.EXTERNAL,\n                discoveredAt: new Date()\n              }\n            };\n            \n            documents.push(document);\n          }\n\n          // Extract links for further crawling if we haven't reached max depth\n          if (depth < maxDepth) {\n            const filteredLinks = links\n              .map(link => link.href)\n              .filter(link => \n                this._isAllowedDomain(link, allowedDomains) && !visitedUrls.has(link)\n              );\n            \n            filteredLinks.forEach(link => {\n              urlQueue.push({ url: link, depth: depth + 1 });\n            });\n          }\n\n          // Rate limiting\n          await this._sleep(target.config.crawlDelayMs || 1000);\n        } catch (error) {\n          this.logger?.warn('Target discovery failed', { \n            targetName: target.name,\n            url,\n            error: error.message \n          });\n        }\n      }\n    } finally {\n      await page.close();\n    }\n\n    return documents;\n  }\n\n  /**\n   * Sitemap discovery\n   */\n  async _discoverSitemap(target) {\n    const { sitemapUrl, maxUrls = 100 } = target.config;\n    \n    try {\n      const response = await this.httpClient.get(sitemapUrl);\n      const sitemapContent = response.data;\n      \n      const urls = this._parseSitemap(sitemapContent);\n      const limitedUrls = urls.slice(0, maxUrls);\n      \n      return limitedUrls.map(urlInfo => this._createDocumentFromUrl(urlInfo.url, null, target, {\n        lastModified: urlInfo.lastmod ? new Date(urlInfo.lastmod) : new Date(),\n        priority: urlInfo.priority,\n        changeFreq: urlInfo.changefreq\n      }));\n    } catch (error) {\n      this.logger?.error('Sitemap discovery failed', { sitemapUrl, error: error.message });\n      return [];\n    }\n  }\n\n  /**\n   * Search API discovery\n   */\n  async _discoverSearchApi(target) {\n    const { apiUrl, query, maxResults = 50 } = target.config;\n    \n    try {\n      const params = {\n        q: query,\n        limit: maxResults,\n        ...target.config.apiParams\n      };\n\n      const response = await this.httpClient.get(apiUrl, { params });\n      const results = response.data.results || response.data.items || response.data;\n      \n      return results.map(result => this._createDocumentFromSearchResult(result, target));\n    } catch (error) {\n      this.logger?.error('Search API discovery failed', { apiUrl, error: error.message });\n      return [];\n    }\n  }\n\n  /**\n   * Social media discovery\n   */\n  async _discoverSocialMedia(target) {\n    // Placeholder for social media discovery\n    // Would integrate with specific social media APIs\n    this.logger?.info('Social media discovery not yet implemented', { targetName: target.name });\n    return [];\n  }\n\n  /**\n   * RSS feed discovery\n   */\n  async _discoverRssFeeds(target) {\n    const { seedUrls } = target.config;\n    const documents = [];\n    \n    for (const url of seedUrls) {\n      try {\n        // Look for RSS feed links on the page\n        const response = await this.httpClient.get(url);\n        const content = response.data;\n        \n        const feedUrls = this._extractFeedUrls(content, url);\n        \n        for (const feedUrl of feedUrls) {\n          const document = this._createDocumentFromUrl(feedUrl, null, target, {\n            feedType: 'rss',\n            parentUrl: url\n          });\n          documents.push(document);\n        }\n      } catch (error) {\n        this.logger?.warn('RSS discovery failed for URL', { url, error: error.message });\n      }\n    }\n    \n    return documents;\n  }\n\n  /**\n   * Create document object from URL\n   */\n  _createDocumentFromUrl(url, content, target, additionalMetadata = {}) {\n    const title = content ? this._extractTitleFromHtml(content) : this._getTitleFromUrl(url);\n    \n    return {\n      id: this._generateDocumentId(url),\n      url,\n      title,\n      lastModified: new Date(),\n      metadata: {\n        sourceId: this.config.id,\n        sourceType: SOURCE_TYPES.DYNAMIC_UNSTRUCTURED,\n        originalUrl: url,\n        visibility: this.config.visibility || VISIBILITY_LEVELS.EXTERNAL,\n        discoveredAt: new Date(),\n        ...additionalMetadata\n      }\n    };\n  }\n\n  /**\n   * Create document from search result\n   */\n  _createDocumentFromSearchResult(result, target) {\n    return {\n      id: this._generateDocumentId(result.url || result.link),\n      url: result.url || result.link,\n      title: result.title || result.name,\n      description: result.description || result.snippet,\n      lastModified: new Date(),\n      metadata: {\n        sourceId: this.config.id,\n        sourceType: SOURCE_TYPES.DYNAMIC_UNSTRUCTURED,\n        originalUrl: result.url || result.link,\n        visibility: this.config.visibility || VISIBILITY_LEVELS.EXTERNAL,\n        discoveredAt: new Date(),\n        searchScore: result.score,\n        searchQuery: target.config.query\n      }\n    };\n  }\n\n  /**\n   * Create document from page\n   */\n  async _createDocumentFromPage(page, url, target) {\n    const title = await page.title();\n    const content = await page.content();\n    \n    return {\n      id: this._generateDocumentId(url),\n      url,\n      title,\n      lastModified: new Date(),\n      metadata: {\n        sourceId: this.config.id,\n        sourceType: SOURCE_TYPES.DYNAMIC_UNSTRUCTURED,\n        originalUrl: url,\n        visibility: this.config.visibility || VISIBILITY_LEVELS.EXTERNAL,\n        discoveredAt: new Date()\n      }\n    };\n  }\n\n  /**\n   * Extract content and title from HTML\n   */\n  _extractFromHtml(html) {\n    const title = this._extractTitleFromHtml(html);\n    const content = this._extractTextFromHtml(html);\n    return { title, content };\n  }\n\n  /**\n   * Extract title from HTML\n   */\n  _extractTitleFromHtml(html) {\n    const titleMatch = html.match(/<title[^>]*>([^<]+)<\\/title>/i);\n    return titleMatch ? titleMatch[1].trim() : null;\n  }\n\n  /**\n   * Extract text content from HTML\n   */\n  _extractTextFromHtml(html) {\n    return html\n      .replace(/<script[^>]*>[\\s\\S]*?<\\/script>/gi, '') // Remove scripts\n      .replace(/<style[^>]*>[\\s\\S]*?<\\/style>/gi, '') // Remove styles\n      .replace(/<nav[^>]*>[\\s\\S]*?<\\/nav>/gi, '') // Remove navigation\n      .replace(/<header[^>]*>[\\s\\S]*?<\\/header>/gi, '') // Remove headers\n      .replace(/<footer[^>]*>[\\s\\S]*?<\\/footer>/gi, '') // Remove footers\n      .replace(/<[^>]+>/g, ' ') // Remove HTML tags\n      .replace(/\\s+/g, ' ') // Normalize whitespace\n      .trim();\n  }\n\n  /**\n   * Extract links from HTML\n   */\n  _extractLinksFromHtml(html, baseUrl) {\n    const linkMatches = html.match(/<a[^>]+href=[\"']([^\"']+)[\"'][^>]*>/gi) || [];\n    const links = linkMatches.map(match => {\n      const hrefMatch = match.match(/href=[\"']([^\"']+)[\"']/i);\n      return hrefMatch ? hrefMatch[1] : null;\n    }).filter(Boolean);\n\n    // Convert relative URLs to absolute\n    return links.map(link => {\n      if (link.startsWith('http')) return link;\n      if (link.startsWith('/')) return new URL(link, baseUrl).href;\n      return new URL(link, baseUrl).href;\n    });\n  }\n\n  /**\n   * Parse sitemap XML\n   */\n  _parseSitemap(sitemapXml) {\n    const urlMatches = sitemapXml.match(/<url[^>]*>[\\s\\S]*?<\\/url>/gi) || [];\n    \n    return urlMatches.map(urlXml => {\n      const loc = this._extractXmlValue(urlXml, 'loc');\n      const lastmod = this._extractXmlValue(urlXml, 'lastmod');\n      const priority = this._extractXmlValue(urlXml, 'priority');\n      const changefreq = this._extractXmlValue(urlXml, 'changefreq');\n      \n      return { url: loc, lastmod, priority, changefreq };\n    }).filter(item => item.url);\n  }\n\n  /**\n   * Extract RSS feed URLs from HTML\n   */\n  _extractFeedUrls(html, baseUrl) {\n    const feedLinks = [];\n    const linkMatches = html.match(/<link[^>]+>/gi) || [];\n    \n    for (const linkTag of linkMatches) {\n      const typeMatch = linkTag.match(/type=[\"']([^\"']+)[\"']/i);\n      const hrefMatch = linkTag.match(/href=[\"']([^\"']+)[\"']/i);\n      \n      if (typeMatch && hrefMatch) {\n        const type = typeMatch[1].toLowerCase();\n        if (type.includes('rss') || type.includes('atom') || type.includes('xml')) {\n          const href = hrefMatch[1];\n          const absoluteUrl = href.startsWith('http') ? href : new URL(href, baseUrl).href;\n          feedLinks.push(absoluteUrl);\n        }\n      }\n    }\n    \n    return feedLinks;\n  }\n\n  /**\n   * Evaluate selectors on a page\n   */\n  async _evaluateSelectors(page, selectors) {\n    return await page.evaluate((selectors) => {\n      const result = {};\n      for (const [key, selector] of Object.entries(selectors)) {\n        const elements = document.querySelectorAll(selector);\n        if (elements.length === 1) {\n          result[key] = elements[0].textContent?.trim() || '';\n        } else if (elements.length > 1) {\n          result[key] = Array.from(elements).map(el => el.textContent?.trim() || '');\n        } else {\n          result[key] = null;\n        }\n      }\n      return result;\n    }, selectors);\n  }\n\n  /**\n   * Handle pagination for a target\n   */\n  async _handlePagination(page, target, collectUrls) {\n    const targetConfig = target?.config || {};\n    const paginationConfig = target?.pagination || {};\n    const { maxPages = 10 } = paginationConfig;\n    const paginationSelector = paginationConfig.nextSelector || targetConfig.paginationSelector || 'a[rel=\"next\"], .next, .pagination .next';\n    let currentPage = 1;\n    \n    // Collect initial page URL\n    let pageUrl = page.url();\n    collectUrls(pageUrl);\n    \n    while (currentPage < maxPages) {\n      try {\n        // Look for next page link\n        const hasNextPage = await page.waitForSelector(paginationSelector, { timeout: 1000 }).then(() => true).catch(() => false);\n        \n        if (!hasNextPage) {\n          this.logger?.info('No more pages found', { \n            targetName: target?.name,\n            currentPage \n          });\n          break;\n        }\n        \n        // Click next page link and wait for navigation\n        await Promise.all([\n          page.waitForNavigation({ waitUntil: 'networkidle0', timeout: 30000 }),\n          page.click(paginationSelector)\n        ]);\n        \n        currentPage++;\n        \n        // Collect URLs from this page - generate different URL for each page\n        const baseUrl = page.url();\n        pageUrl = baseUrl.includes('page') ? baseUrl : `${baseUrl}?page=${currentPage}`;\n        collectUrls(pageUrl);\n        \n        this.logger?.info('Navigated to next page', { \n          targetName: target?.name,\n          currentPage,\n          url: pageUrl\n        });\n        \n        // Rate limiting between pages\n        await this._sleep(targetConfig.crawlDelayMs || 1000);\n        \n      } catch (error) {\n        this.logger?.warn('Pagination failed', { \n          targetName: target?.name,\n          currentPage,\n          error: error.message \n        });\n        break;\n      }\n    }\n  }\n\n  /**\n   * Helper methods\n   */\n  _extractXmlValue(xml, tagName) {\n    const regex = new RegExp(`<${tagName}[^>]*>([\\\\s\\\\S]*?)<\\\\/${tagName}>`, 'i');\n    const match = xml.match(regex);\n    return match ? match[1].trim() : null;\n  }\n\n  _isAllowedDomain(url, allowedDomains) {\n    if (allowedDomains.length === 0) return true;\n    try {\n      const domain = new URL(url).hostname;\n      return allowedDomains.some(allowed => domain.includes(allowed));\n    } catch {\n      return false;\n    }\n  }\n\n  _getTitleFromUrl(url) {\n    try {\n      const pathname = new URL(url).pathname;\n      return pathname.split('/').pop() || url;\n    } catch {\n      return url;\n    }\n  }\n\n  _extractTitleFromContent(content) {\n    const lines = content.split('\\n').filter(line => line.trim());\n    return lines[0]?.substring(0, 100) || null;\n  }\n\n  _deduplicateDocuments(documents) {\n    const seen = new Set();\n    return documents.filter(doc => {\n      const key = doc.url || doc.id;\n      if (seen.has(key)) return false;\n      seen.add(key);\n      return true;\n    });\n  }\n\n  _requiresManualReview(extractedContent) {\n    // Simple heuristics for manual review requirement\n    const content = extractedContent.content;\n    const contentLength = content.length;\n    \n    // Require review for very short or very long content\n    if (contentLength < 100 || contentLength > 50000) return true;\n    \n    // Require review for content with suspicious patterns\n    const suspiciousPatterns = [\n      /error|404|not found/i,\n      /access denied|forbidden/i,\n      /javascript required/i\n    ];\n    \n    return suspiciousPatterns.some(pattern => pattern.test(content));\n  }\n\n  _configureAuthentication() {\n    const auth = this.config.authentication;\n    \n    if (auth.type === 'bearer') {\n      this.httpClient.defaults.headers.common['Authorization'] = `Bearer ${auth.token}`;\n    } else if (auth.type === 'basic') {\n      this.httpClient.defaults.auth = {\n        username: auth.username,\n        password: auth.password\n      };\n    } else if (auth.type === 'api-key') {\n      this.httpClient.defaults.headers.common[auth.headerName || 'X-API-Key'] = auth.key;\n    }\n  }\n\n  _generateDocumentId(identifier) {\n    return crypto.createHash('md5').update(identifier || '').digest('hex');\n  }\n\n  _cleanContent(content) {\n    if (!content) return '';\n    \n    return content\n      .replace(/\\r\\n/g, '\\n')\n      .replace(/\\n{3,}/g, '\\n\\n')\n      .replace(/\\s+/g, ' ')\n      .trim();\n  }\n\n  _countWords(content) {\n    return content.split(/\\s+/).filter(word => word.length > 0).length;\n  }\n\n  _sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Update last discovery time\n   */\n  updateLastDiscoveryTime(timestamp = new Date()) {\n    this.lastDiscoveryTime = timestamp;\n    this.logger?.info('Updated last discovery time', { \n      sourceId: this.config.id,\n      lastDiscoveryTime: this.lastDiscoveryTime \n    });\n  }\n\n  /**\n   * Validate content against filters\n   */\n  _validateContent(content, filters) {\n    if (!content || !filters) {\n      return true;\n    }\n    \n    // Check minimum word count\n    if (filters.minWordCount) {\n      const wordCount = content.split(/\\s+/).length;\n      if (wordCount < filters.minWordCount) {\n        return false;\n      }\n    }\n    \n    // Check for excluded patterns\n    if (filters.excludePatterns) {\n      const lowerContent = content.toLowerCase();\n      for (const pattern of filters.excludePatterns) {\n        if (lowerContent.includes(pattern.toLowerCase())) {\n          return false;\n        }\n      }\n    }\n    \n    // Check for required keywords\n    if (filters.requireKeywords) {\n      const lowerContent = content.toLowerCase();\n      for (const keyword of filters.requireKeywords) {\n        if (!lowerContent.includes(keyword.toLowerCase())) {\n          return false;\n        }\n      }\n    }\n    \n    return true;\n  }\n\n  /**\n   * Check robots.txt compliance\n   */\n  async _checkRobotsTxt(url) {\n    try {\n      const urlObj = new URL(url);\n      const robotsUrl = `${urlObj.protocol}//${urlObj.host}/robots.txt`;\n      \n      const response = await this.httpClient.get(robotsUrl);\n      const robotsContent = response.data;\n      \n      // Simple robots.txt parsing - check for Disallow rules\n      const lines = robotsContent.split('\\n');\n      let userAgentMatch = false;\n      \n      for (const line of lines) {\n        const trimmed = line.trim();\n        if (trimmed.startsWith('User-agent:')) {\n          userAgentMatch = trimmed.includes('*') || trimmed.includes('bot');\n        } else if (userAgentMatch && trimmed.startsWith('Disallow:')) {\n          const disallowPath = trimmed.substring(9).trim();\n          if (disallowPath && urlObj.pathname.startsWith(disallowPath)) {\n            return false;\n          }\n        }\n      }\n      \n      return true;\n    } catch (error) {\n      // If robots.txt is not accessible, allow crawling\n      return true;\n    }\n  }\n\n  /**\n   * Fetch robots.txt content\n   */\n  async _fetchRobotsTxt(robotsUrl) {\n    const response = await this.httpClient.get(robotsUrl);\n    return response.data;\n  }\n\n  /**\n   * Apply delay between requests\n   */\n  async _applyDelay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Clean up resources\n   */\n  async cleanup() {\n    this.logger?.info('DynamicUnstructuredSourceHandler cleanup completed', { sourceId: this.config.id });\n    this.discoveredUrls.clear();\n    if (this.browser) {\n      await this.browser.close();\n    }\n  }\n\n  /**\n   * Find target configuration for a document\n   */\n  _findTargetForDocument(document) {\n    return this.config.config.targets.find(target => \n      target.name === document.metadata.targetName || \n      target.name === document.metadata.target\n    );\n  }\n\n  /**\n   * Get filter reason for content validation\n   */\n  _getFilterReason(content, filters) {\n    const reasons = [];\n    \n    if (filters.minWordCount) {\n      const wordCount = content.split(/\\s+/).length;\n      if (wordCount < filters.minWordCount) {\n        reasons.push(`word count (${wordCount} < ${filters.minWordCount})`);\n      }\n    }\n    \n    if (filters.excludePatterns) {\n      const lowerContent = content.toLowerCase();\n      for (const pattern of filters.excludePatterns) {\n        if (lowerContent.includes(pattern.toLowerCase())) {\n          reasons.push(`excluded pattern: ${pattern}`);\n        }\n      }\n    }\n    \n    if (filters.requireKeywords) {\n      const lowerContent = content.toLowerCase();\n      for (const keyword of filters.requireKeywords) {\n        if (!lowerContent.includes(keyword.toLowerCase())) {\n          reasons.push(`missing required keyword: ${keyword}`);\n        }\n      }\n    }\n    \n    return reasons.join(', ');\n  }\n}\n\nmodule.exports = DynamicUnstructuredSourceHandler;\n"],"mappings":"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","ignoreList":[]}