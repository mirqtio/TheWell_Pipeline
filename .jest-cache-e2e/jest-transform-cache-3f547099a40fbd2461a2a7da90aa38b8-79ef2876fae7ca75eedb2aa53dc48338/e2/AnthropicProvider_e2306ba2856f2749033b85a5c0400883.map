{"version":3,"names":["BaseProvider","require","logger","AnthropicProvider","constructor","config","apiKey","Error","baseUrl","defaultModel","model","version","pricing","input","output","getName","getSupportedModels","Object","keys","complete","request","prompt","options","includes","incrementRequestCount","requestBody","max_tokens","maxTokens","messages","role","content","temperature","top_p","topP","top_k","topK","startTime","Date","now","attempt","maxRetries","response","makeRequest","duration","result","text","usage","inputTokens","input_tokens","outputTokens","output_tokens","totalTokens","cost","calculateCost","metadata","provider","finishReason","stop_reason","info","total","error","incrementErrorCount","warn","message","isNonRetryableError","attempts","delay","Math","min","pow","Promise","resolve","setTimeout","modelPricing","inputCost","outputCost","Number","toFixed","currency","endpoint","data","url","controller","AbortController","timeoutId","abort","timeout","fetch","method","headers","body","JSON","stringify","signal","clearTimeout","ok","errorData","json","catch","status","type","name","timeoutError","code","nonRetryableStatuses","nonRetryableTypes","module","exports"],"sources":["AnthropicProvider.js"],"sourcesContent":["/**\n * Anthropic Provider Implementation\n * \n * Implements the BaseProvider interface for Anthropic's Claude API.\n * Supports Claude models with proper error handling and cost calculation.\n */\n\nconst BaseProvider = require('./BaseProvider');\nconst logger = require('../../utils/logger');\n\nclass AnthropicProvider extends BaseProvider {\n  constructor(config = {}) {\n    super(config);\n    \n    if (!config.apiKey) {\n      throw new Error('Anthropic API key is required');\n    }\n    \n    this.apiKey = config.apiKey;\n    this.baseUrl = config.baseUrl || 'https://api.anthropic.com/v1';\n    this.defaultModel = config.model || 'claude-3-sonnet-20240229';\n    this.version = config.version || '2023-06-01';\n    \n    // Model pricing per 1K tokens (as of 2024)\n    this.pricing = {\n      'claude-3-opus-20240229': { input: 0.015, output: 0.075 },\n      'claude-3-sonnet-20240229': { input: 0.003, output: 0.015 },\n      'claude-3-haiku-20240307': { input: 0.00025, output: 0.00125 },\n      'claude-2.1': { input: 0.008, output: 0.024 },\n      'claude-2.0': { input: 0.008, output: 0.024 }\n    };\n  }\n\n  getName() {\n    return 'anthropic';\n  }\n\n  getSupportedModels() {\n    return Object.keys(this.pricing);\n  }\n\n  async complete(request) {\n    const { model = this.defaultModel, prompt, options = {} } = request;\n    \n    if (!this.getSupportedModels().includes(model)) {\n      throw new Error(`Unsupported model: ${model}`);\n    }\n\n    this.incrementRequestCount();\n    \n    const requestBody = {\n      model,\n      max_tokens: options.maxTokens || 1000,\n      messages: [{ role: 'user', content: prompt }],\n      temperature: options.temperature || 0.7,\n      top_p: options.topP || 1,\n      top_k: options.topK || 40\n    };\n\n    const startTime = Date.now();\n    let attempt = 0;\n    \n    while (attempt < this.config.maxRetries) {\n      try {\n        const response = await this.makeRequest('/messages', requestBody);\n        const duration = Date.now() - startTime;\n        \n        const result = {\n          content: response.content[0].text,\n          model: response.model,\n          usage: {\n            inputTokens: response.usage.input_tokens,\n            outputTokens: response.usage.output_tokens,\n            totalTokens: response.usage.input_tokens + response.usage.output_tokens\n          },\n          cost: this.calculateCost(\n            response.model,\n            response.usage.input_tokens,\n            response.usage.output_tokens\n          ),\n          metadata: {\n            provider: this.getName(),\n            duration,\n            attempt: attempt + 1,\n            finishReason: response.stop_reason\n          }\n        };\n\n        logger.info('Anthropic completion successful', {\n          model: response.model,\n          inputTokens: result.usage.inputTokens,\n          outputTokens: result.usage.outputTokens,\n          cost: result.cost.total,\n          duration\n        });\n\n        return result;\n        \n      } catch (error) {\n        attempt++;\n        this.incrementErrorCount();\n        \n        logger.warn('Anthropic completion attempt failed', {\n          attempt,\n          error: error.message,\n          model,\n          maxRetries: this.config.maxRetries\n        });\n        \n        // Don't retry on certain errors\n        if (this.isNonRetryableError(error)) {\n          throw error;\n        }\n        \n        if (attempt >= this.config.maxRetries) {\n          logger.error('Anthropic completion failed after all retries', {\n            error: error.message,\n            model,\n            attempts: attempt\n          });\n          throw error;\n        }\n        \n        // Exponential backoff\n        const delay = Math.min(1000 * Math.pow(2, attempt - 1), 10000);\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n    }\n  }\n\n  calculateCost(model, inputTokens, outputTokens) {\n    const modelPricing = this.pricing[model];\n    if (!modelPricing) {\n      throw new Error(`No pricing information for model: ${model}`);\n    }\n    \n    const inputCost = (inputTokens / 1000) * modelPricing.input;\n    const outputCost = (outputTokens / 1000) * modelPricing.output;\n    const total = inputCost + outputCost;\n    \n    return {\n      inputCost: Number(inputCost.toFixed(6)),\n      outputCost: Number(outputCost.toFixed(6)),\n      total: Number(total.toFixed(6)),\n      currency: 'USD'\n    };\n  }\n\n  async makeRequest(endpoint, data) {\n    const url = `${this.baseUrl}${endpoint}`;\n    \n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => {\n      controller.abort();\n    }, this.config.timeout);\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'x-api-key': this.apiKey,\n          'anthropic-version': this.version,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        signal: controller.signal\n      });\n\n      clearTimeout(timeoutId);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        const error = new Error(errorData.error?.message || `HTTP ${response.status}`);\n        error.status = response.status;\n        error.type = errorData.error?.type;\n        throw error;\n      }\n\n      return await response.json();\n    } catch (error) {\n      clearTimeout(timeoutId);\n      \n      if (error.name === 'AbortError') {\n        const timeoutError = new Error(`Request timeout after ${this.config.timeout}ms`);\n        timeoutError.code = 'TIMEOUT';\n        throw timeoutError;\n      }\n      \n      throw error;\n    }\n  }\n\n  isNonRetryableError(error) {\n    // Don't retry on authentication, permission, or validation errors\n    const nonRetryableStatuses = [400, 401, 403, 404];\n    const nonRetryableTypes = ['invalid_request_error', 'authentication_error', 'permission_error'];\n    \n    return nonRetryableStatuses.includes(error.status) || \n           nonRetryableTypes.includes(error.type);\n  }\n}\n\nmodule.exports = AnthropicProvider;\n"],"mappings":"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","ignoreList":[]}