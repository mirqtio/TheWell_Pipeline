{"version":3,"names":["BaseProvider","require","logger","OpenAIProvider","constructor","config","apiKey","Error","baseUrl","defaultModel","model","pricing","input","output","getName","getSupportedModels","Object","keys","complete","request","prompt","options","includes","incrementRequestCount","requestBody","messages","role","content","max_tokens","maxTokens","temperature","top_p","topP","frequency_penalty","frequencyPenalty","presence_penalty","presencePenalty","startTime","Date","now","attempt","maxRetries","response","makeRequest","duration","result","choices","message","usage","inputTokens","prompt_tokens","outputTokens","completion_tokens","totalTokens","total_tokens","cost","calculateCost","metadata","provider","finishReason","finish_reason","info","total","error","incrementErrorCount","warn","isNonRetryableError","attempts","delay","Math","min","pow","Promise","resolve","setTimeout","modelPricing","inputCost","outputCost","Number","toFixed","currency","endpoint","data","url","controller","AbortController","timeoutId","abort","timeout","fetch","method","headers","body","JSON","stringify","signal","clearTimeout","ok","errorData","json","catch","status","name","timeoutError","code","nonRetryableStatuses","module","exports"],"sources":["OpenAIProvider.js"],"sourcesContent":["/**\n * OpenAI Provider Implementation\n * \n * Implements the BaseProvider interface for OpenAI's API.\n * Supports GPT models with proper error handling and cost calculation.\n */\n\nconst BaseProvider = require('./BaseProvider');\nconst logger = require('../../utils/logger');\n\nclass OpenAIProvider extends BaseProvider {\n  constructor(config = {}) {\n    super(config);\n    \n    if (!config.apiKey) {\n      throw new Error('OpenAI API key is required');\n    }\n    \n    this.apiKey = config.apiKey;\n    this.baseUrl = config.baseUrl || 'https://api.openai.com/v1';\n    this.defaultModel = config.model || 'gpt-4-turbo';\n    \n    // Model pricing per 1K tokens (as of 2024)\n    this.pricing = {\n      'gpt-4-turbo': { input: 0.01, output: 0.03 },\n      'gpt-4': { input: 0.03, output: 0.06 },\n      'gpt-3.5-turbo': { input: 0.0015, output: 0.002 },\n      'gpt-3.5-turbo-16k': { input: 0.003, output: 0.004 }\n    };\n  }\n\n  getName() {\n    return 'openai';\n  }\n\n  getSupportedModels() {\n    return Object.keys(this.pricing);\n  }\n\n  async complete(request) {\n    const { model = this.defaultModel, prompt, options = {} } = request;\n    \n    if (!this.getSupportedModels().includes(model)) {\n      throw new Error(`Unsupported model: ${model}`);\n    }\n\n    this.incrementRequestCount();\n    \n    const requestBody = {\n      model,\n      messages: [{ role: 'user', content: prompt }],\n      max_tokens: options.maxTokens || 1000,\n      temperature: options.temperature || 0.7,\n      top_p: options.topP || 1,\n      frequency_penalty: options.frequencyPenalty || 0,\n      presence_penalty: options.presencePenalty || 0\n    };\n\n    const startTime = Date.now();\n    let attempt = 0;\n    \n    while (attempt < this.config.maxRetries) {\n      try {\n        const response = await this.makeRequest('/chat/completions', requestBody);\n        const duration = Date.now() - startTime;\n        \n        const result = {\n          content: response.choices[0].message.content,\n          model: response.model,\n          usage: {\n            inputTokens: response.usage.prompt_tokens,\n            outputTokens: response.usage.completion_tokens,\n            totalTokens: response.usage.total_tokens\n          },\n          cost: this.calculateCost(\n            response.model,\n            response.usage.prompt_tokens,\n            response.usage.completion_tokens\n          ),\n          metadata: {\n            provider: this.getName(),\n            duration,\n            attempt: attempt + 1,\n            finishReason: response.choices[0].finish_reason\n          }\n        };\n\n        logger.info('OpenAI completion successful', {\n          model: response.model,\n          inputTokens: result.usage.inputTokens,\n          outputTokens: result.usage.outputTokens,\n          cost: result.cost.total,\n          duration\n        });\n\n        return result;\n        \n      } catch (error) {\n        attempt++;\n        this.incrementErrorCount();\n        \n        logger.warn('OpenAI completion attempt failed', {\n          attempt,\n          error: error.message,\n          model,\n          maxRetries: this.config.maxRetries\n        });\n        \n        // Don't retry on certain errors\n        if (this.isNonRetryableError(error)) {\n          throw error;\n        }\n        \n        if (attempt >= this.config.maxRetries) {\n          logger.error('OpenAI completion failed after all retries', {\n            error: error.message,\n            model,\n            attempts: attempt\n          });\n          throw error;\n        }\n        \n        // Exponential backoff\n        const delay = Math.min(1000 * Math.pow(2, attempt - 1), 10000);\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n    }\n  }\n\n  calculateCost(model, inputTokens, outputTokens) {\n    const modelPricing = this.pricing[model];\n    if (!modelPricing) {\n      throw new Error(`No pricing information for model: ${model}`);\n    }\n    \n    const inputCost = (inputTokens / 1000) * modelPricing.input;\n    const outputCost = (outputTokens / 1000) * modelPricing.output;\n    const total = inputCost + outputCost;\n    \n    return {\n      inputCost: Number(inputCost.toFixed(6)),\n      outputCost: Number(outputCost.toFixed(6)),\n      total: Number(total.toFixed(6)),\n      currency: 'USD'\n    };\n  }\n\n  async makeRequest(endpoint, data) {\n    const url = `${this.baseUrl}${endpoint}`;\n    \n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => {\n      controller.abort();\n    }, this.config.timeout);\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        signal: controller.signal\n      });\n\n      clearTimeout(timeoutId);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        const error = new Error(errorData.error?.message || `HTTP ${response.status}`);\n        error.status = response.status;\n        throw error;\n      }\n\n      return await response.json();\n    } catch (error) {\n      clearTimeout(timeoutId);\n      \n      if (error.name === 'AbortError') {\n        const timeoutError = new Error(`Request timeout after ${this.config.timeout}ms`);\n        timeoutError.code = 'TIMEOUT';\n        throw timeoutError;\n      }\n      \n      throw error;\n    }\n  }\n\n  isNonRetryableError(error) {\n    // Don't retry on authentication, permission, or validation errors\n    const nonRetryableStatuses = [400, 401, 403, 404];\n    return nonRetryableStatuses.includes(error.status);\n  }\n}\n\nmodule.exports = OpenAIProvider;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC9C,MAAMC,MAAM,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAE5C,MAAME,cAAc,SAASH,YAAY,CAAC;EACxCI,WAAWA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE;IACvB,KAAK,CAACA,MAAM,CAAC;IAEb,IAAI,CAACA,MAAM,CAACC,MAAM,EAAE;MAClB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IAEA,IAAI,CAACD,MAAM,GAAGD,MAAM,CAACC,MAAM;IAC3B,IAAI,CAACE,OAAO,GAAGH,MAAM,CAACG,OAAO,IAAI,2BAA2B;IAC5D,IAAI,CAACC,YAAY,GAAGJ,MAAM,CAACK,KAAK,IAAI,aAAa;;IAEjD;IACA,IAAI,CAACC,OAAO,GAAG;MACb,aAAa,EAAE;QAAEC,KAAK,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAK,CAAC;MAC5C,OAAO,EAAE;QAAED,KAAK,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAK,CAAC;MACtC,eAAe,EAAE;QAAED,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAM,CAAC;MACjD,mBAAmB,EAAE;QAAED,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAM;IACrD,CAAC;EACH;EAEAC,OAAOA,CAAA,EAAG;IACR,OAAO,QAAQ;EACjB;EAEAC,kBAAkBA,CAAA,EAAG;IACnB,OAAOC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACN,OAAO,CAAC;EAClC;EAEA,MAAMO,QAAQA,CAACC,OAAO,EAAE;IACtB,MAAM;MAAET,KAAK,GAAG,IAAI,CAACD,YAAY;MAAEW,MAAM;MAAEC,OAAO,GAAG,CAAC;IAAE,CAAC,GAAGF,OAAO;IAEnE,IAAI,CAAC,IAAI,CAACJ,kBAAkB,CAAC,CAAC,CAACO,QAAQ,CAACZ,KAAK,CAAC,EAAE;MAC9C,MAAM,IAAIH,KAAK,CAAC,sBAAsBG,KAAK,EAAE,CAAC;IAChD;IAEA,IAAI,CAACa,qBAAqB,CAAC,CAAC;IAE5B,MAAMC,WAAW,GAAG;MAClBd,KAAK;MACLe,QAAQ,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEP;MAAO,CAAC,CAAC;MAC7CQ,UAAU,EAAEP,OAAO,CAACQ,SAAS,IAAI,IAAI;MACrCC,WAAW,EAAET,OAAO,CAACS,WAAW,IAAI,GAAG;MACvCC,KAAK,EAAEV,OAAO,CAACW,IAAI,IAAI,CAAC;MACxBC,iBAAiB,EAAEZ,OAAO,CAACa,gBAAgB,IAAI,CAAC;MAChDC,gBAAgB,EAAEd,OAAO,CAACe,eAAe,IAAI;IAC/C,CAAC;IAED,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5B,IAAIC,OAAO,GAAG,CAAC;IAEf,OAAOA,OAAO,GAAG,IAAI,CAACnC,MAAM,CAACoC,UAAU,EAAE;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC,mBAAmB,EAAEnB,WAAW,CAAC;QACzE,MAAMoB,QAAQ,GAAGN,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS;QAEvC,MAAMQ,MAAM,GAAG;UACblB,OAAO,EAAEe,QAAQ,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACpB,OAAO;UAC5CjB,KAAK,EAAEgC,QAAQ,CAAChC,KAAK;UACrBsC,KAAK,EAAE;YACLC,WAAW,EAAEP,QAAQ,CAACM,KAAK,CAACE,aAAa;YACzCC,YAAY,EAAET,QAAQ,CAACM,KAAK,CAACI,iBAAiB;YAC9CC,WAAW,EAAEX,QAAQ,CAACM,KAAK,CAACM;UAC9B,CAAC;UACDC,IAAI,EAAE,IAAI,CAACC,aAAa,CACtBd,QAAQ,CAAChC,KAAK,EACdgC,QAAQ,CAACM,KAAK,CAACE,aAAa,EAC5BR,QAAQ,CAACM,KAAK,CAACI,iBACjB,CAAC;UACDK,QAAQ,EAAE;YACRC,QAAQ,EAAE,IAAI,CAAC5C,OAAO,CAAC,CAAC;YACxB8B,QAAQ;YACRJ,OAAO,EAAEA,OAAO,GAAG,CAAC;YACpBmB,YAAY,EAAEjB,QAAQ,CAACI,OAAO,CAAC,CAAC,CAAC,CAACc;UACpC;QACF,CAAC;QAED1D,MAAM,CAAC2D,IAAI,CAAC,8BAA8B,EAAE;UAC1CnD,KAAK,EAAEgC,QAAQ,CAAChC,KAAK;UACrBuC,WAAW,EAAEJ,MAAM,CAACG,KAAK,CAACC,WAAW;UACrCE,YAAY,EAAEN,MAAM,CAACG,KAAK,CAACG,YAAY;UACvCI,IAAI,EAAEV,MAAM,CAACU,IAAI,CAACO,KAAK;UACvBlB;QACF,CAAC,CAAC;QAEF,OAAOC,MAAM;MAEf,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdvB,OAAO,EAAE;QACT,IAAI,CAACwB,mBAAmB,CAAC,CAAC;QAE1B9D,MAAM,CAAC+D,IAAI,CAAC,kCAAkC,EAAE;UAC9CzB,OAAO;UACPuB,KAAK,EAAEA,KAAK,CAAChB,OAAO;UACpBrC,KAAK;UACL+B,UAAU,EAAE,IAAI,CAACpC,MAAM,CAACoC;QAC1B,CAAC,CAAC;;QAEF;QACA,IAAI,IAAI,CAACyB,mBAAmB,CAACH,KAAK,CAAC,EAAE;UACnC,MAAMA,KAAK;QACb;QAEA,IAAIvB,OAAO,IAAI,IAAI,CAACnC,MAAM,CAACoC,UAAU,EAAE;UACrCvC,MAAM,CAAC6D,KAAK,CAAC,4CAA4C,EAAE;YACzDA,KAAK,EAAEA,KAAK,CAAChB,OAAO;YACpBrC,KAAK;YACLyD,QAAQ,EAAE3B;UACZ,CAAC,CAAC;UACF,MAAMuB,KAAK;QACb;;QAEA;QACA,MAAMK,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,IAAI,GAAGD,IAAI,CAACE,GAAG,CAAC,CAAC,EAAE/B,OAAO,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;QAC9D,MAAM,IAAIgC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEL,KAAK,CAAC,CAAC;MAC1D;IACF;EACF;EAEAZ,aAAaA,CAAC9C,KAAK,EAAEuC,WAAW,EAAEE,YAAY,EAAE;IAC9C,MAAMwB,YAAY,GAAG,IAAI,CAAChE,OAAO,CAACD,KAAK,CAAC;IACxC,IAAI,CAACiE,YAAY,EAAE;MACjB,MAAM,IAAIpE,KAAK,CAAC,qCAAqCG,KAAK,EAAE,CAAC;IAC/D;IAEA,MAAMkE,SAAS,GAAI3B,WAAW,GAAG,IAAI,GAAI0B,YAAY,CAAC/D,KAAK;IAC3D,MAAMiE,UAAU,GAAI1B,YAAY,GAAG,IAAI,GAAIwB,YAAY,CAAC9D,MAAM;IAC9D,MAAMiD,KAAK,GAAGc,SAAS,GAAGC,UAAU;IAEpC,OAAO;MACLD,SAAS,EAAEE,MAAM,CAACF,SAAS,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;MACvCF,UAAU,EAAEC,MAAM,CAACD,UAAU,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;MACzCjB,KAAK,EAAEgB,MAAM,CAAChB,KAAK,CAACiB,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/BC,QAAQ,EAAE;IACZ,CAAC;EACH;EAEA,MAAMrC,WAAWA,CAACsC,QAAQ,EAAEC,IAAI,EAAE;IAChC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAAC3E,OAAO,GAAGyE,QAAQ,EAAE;IAExC,MAAMG,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IACxC,MAAMC,SAAS,GAAGZ,UAAU,CAAC,MAAM;MACjCU,UAAU,CAACG,KAAK,CAAC,CAAC;IACpB,CAAC,EAAE,IAAI,CAAClF,MAAM,CAACmF,OAAO,CAAC;IAEvB,IAAI;MACF,MAAM9C,QAAQ,GAAG,MAAM+C,KAAK,CAACN,GAAG,EAAE;QAChCO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,eAAe,EAAE,UAAU,IAAI,CAACrF,MAAM,EAAE;UACxC,cAAc,EAAE;QAClB,CAAC;QACDsF,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC;QAC1Ba,MAAM,EAAEX,UAAU,CAACW;MACrB,CAAC,CAAC;MAEFC,YAAY,CAACV,SAAS,CAAC;MAEvB,IAAI,CAAC5C,QAAQ,CAACuD,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMxD,QAAQ,CAACyD,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACzD,MAAMrC,KAAK,GAAG,IAAIxD,KAAK,CAAC2F,SAAS,CAACnC,KAAK,EAAEhB,OAAO,IAAI,QAAQL,QAAQ,CAAC2D,MAAM,EAAE,CAAC;QAC9EtC,KAAK,CAACsC,MAAM,GAAG3D,QAAQ,CAAC2D,MAAM;QAC9B,MAAMtC,KAAK;MACb;MAEA,OAAO,MAAMrB,QAAQ,CAACyD,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOpC,KAAK,EAAE;MACdiC,YAAY,CAACV,SAAS,CAAC;MAEvB,IAAIvB,KAAK,CAACuC,IAAI,KAAK,YAAY,EAAE;QAC/B,MAAMC,YAAY,GAAG,IAAIhG,KAAK,CAAC,yBAAyB,IAAI,CAACF,MAAM,CAACmF,OAAO,IAAI,CAAC;QAChFe,YAAY,CAACC,IAAI,GAAG,SAAS;QAC7B,MAAMD,YAAY;MACpB;MAEA,MAAMxC,KAAK;IACb;EACF;EAEAG,mBAAmBA,CAACH,KAAK,EAAE;IACzB;IACA,MAAM0C,oBAAoB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACjD,OAAOA,oBAAoB,CAACnF,QAAQ,CAACyC,KAAK,CAACsC,MAAM,CAAC;EACpD;AACF;AAEAK,MAAM,CAACC,OAAO,GAAGxG,cAAc","ignoreList":[]}