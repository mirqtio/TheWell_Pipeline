{"version":3,"names":["EventEmitter","require","VisibilityManager","constructor","options","defaultVisibility","allowedVisibilities","requireApprovalFor","visibilityRules","Map","accessPolicies","pendingApprovals","VISIBILITY_STATES","INTERNAL","EXTERNAL","RESTRICTED","PUBLIC","DRAFT","ARCHIVED","ACCESS_LEVELS","READ","WRITE","ADMIN","APPROVE","setDocumentVisibility","documentId","visibility","metadata","_validateVisibility","visibilityData","previousVisibility","getDocumentVisibility","setBy","userId","setAt","Date","toISOString","reason","approvalRequired","_requiresApproval","_requestApproval","_applyVisibility","approvalStatus","error","emit","type","message","checkAccess","accessLevel","userPermissions","getUserPermissions","_evaluateAccess","bulkUpdateVisibility","updates","results","errors","update","result","push","successful","length","failed","getPendingApprovals","filters","pending","Array","from","values","filtered","filter","item","requestedBy","since","sort","a","b","approveVisibilityChange","approvalId","approvedBy","notes","approval","get","Error","approvalData","approvedAt","approvalNotes","status","delete","rejectVisibilityChange","rejectedBy","rejectionData","rejectedAt","rejectionReason","addVisibilityRule","ruleId","rule","_validateRule","set","createdAt","removeVisibilityRule","removed","roles","permissions","visibilityLevels","applyVisibilityRules","documentMetadata","applicableRules","_findApplicableRules","sortedRules","priority","_evaluateRuleConditions","id","includes","join","now","Math","random","toString","substr","approvalRequest","requestedAt","success","oldVisibility","newVisibility","changedBy","changedAt","appliedAt","conditions","_ruleMatchesDocument","sourceType","fileType","tags","documentTags","hasRequiredTags","every","tag","module","exports"],"sources":["VisibilityManager.js"],"sourcesContent":["const EventEmitter = require('events');\n\n/**\n * Document Visibility Management System\n * Handles document visibility states, access controls, and workflow integration\n */\nclass VisibilityManager extends EventEmitter {\n  constructor(options = {}) {\n    super();\n    \n    this.options = {\n      defaultVisibility: 'internal',\n      allowedVisibilities: ['internal', 'external', 'restricted', 'public'],\n      requireApprovalFor: ['external', 'public'],\n      ...options\n    };\n\n    this.visibilityRules = new Map();\n    this.accessPolicies = new Map();\n    this.pendingApprovals = new Map();\n  }\n\n  /**\n   * Visibility states enum\n   */\n  static VISIBILITY_STATES = {\n    INTERNAL: 'internal',     // Only visible to internal users\n    EXTERNAL: 'external',     // Visible to external partners\n    RESTRICTED: 'restricted', // Requires special permissions\n    PUBLIC: 'public',         // Publicly accessible\n    DRAFT: 'draft',          // Work in progress\n    ARCHIVED: 'archived'      // Historical/inactive\n  };\n\n  /**\n   * Access levels enum\n   */\n  static ACCESS_LEVELS = {\n    READ: 'read',\n    WRITE: 'write',\n    ADMIN: 'admin',\n    APPROVE: 'approve'\n  };\n\n  /**\n   * Set document visibility with validation\n   */\n  async setDocumentVisibility(documentId, visibility, metadata = {}) {\n    this._validateVisibility(visibility);\n\n    const visibilityData = {\n      documentId,\n      visibility,\n      previousVisibility: await this.getDocumentVisibility(documentId),\n      setBy: metadata.userId || 'system',\n      setAt: new Date().toISOString(),\n      reason: metadata.reason || 'Manual update',\n      approvalRequired: this._requiresApproval(visibility),\n      metadata\n    };\n\n    // Check if approval is required\n    if (visibilityData.approvalRequired) {\n      return await this._requestApproval(visibilityData);\n    }\n\n    // Apply visibility immediately\n    return await this._applyVisibility(visibilityData);\n  }\n\n  /**\n   * Get document visibility state\n   */\n  async getDocumentVisibility(documentId) {\n    try {\n      // In a real implementation, this would query the database\n      // For now, return default visibility\n      return {\n        documentId,\n        visibility: this.options.defaultVisibility,\n        setBy: 'system',\n        setAt: new Date().toISOString(),\n        approvalStatus: 'approved'\n      };\n    } catch (error) {\n      this.emit('error', { \n        type: 'visibility_query_failed', \n        documentId, \n        error: error.message \n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Check if user has access to document\n   */\n  async checkAccess(documentId, userId, accessLevel = VisibilityManager.ACCESS_LEVELS.READ) {\n    try {\n      const visibility = await this.getDocumentVisibility(documentId);\n      const userPermissions = await this.getUserPermissions(userId);\n\n      return this._evaluateAccess(visibility, userPermissions, accessLevel);\n    } catch (error) {\n      this.emit('error', { \n        type: 'access_check_failed', \n        documentId, \n        userId, \n        error: error.message \n      });\n      return false;\n    }\n  }\n\n  /**\n   * Bulk update document visibilities\n   */\n  async bulkUpdateVisibility(updates, metadata = {}) {\n    const results = [];\n    const errors = [];\n\n    for (const update of updates) {\n      try {\n        const result = await this.setDocumentVisibility(\n          update.documentId, \n          update.visibility, \n          { ...metadata, ...update.metadata }\n        );\n        results.push(result);\n      } catch (error) {\n        errors.push({\n          documentId: update.documentId,\n          error: error.message\n        });\n      }\n    }\n\n    this.emit('bulkUpdate', { \n      successful: results.length, \n      failed: errors.length, \n      errors \n    });\n\n    return { results, errors };\n  }\n\n  /**\n   * Get documents pending approval\n   */\n  async getPendingApprovals(filters = {}) {\n    const pending = Array.from(this.pendingApprovals.values());\n    \n    let filtered = pending;\n    \n    if (filters.visibility) {\n      filtered = filtered.filter(item => item.visibility === filters.visibility);\n    }\n    \n    if (filters.requestedBy) {\n      filtered = filtered.filter(item => item.setBy === filters.requestedBy);\n    }\n    \n    if (filters.since) {\n      const since = new Date(filters.since);\n      filtered = filtered.filter(item => new Date(item.setAt) >= since);\n    }\n\n    return filtered.sort((a, b) => new Date(b.setAt) - new Date(a.setAt));\n  }\n\n  /**\n   * Approve visibility change\n   */\n  async approveVisibilityChange(approvalId, approvedBy, notes = '') {\n    const approval = this.pendingApprovals.get(approvalId);\n    \n    if (!approval) {\n      throw new Error(`Approval request ${approvalId} not found`);\n    }\n\n    const approvalData = {\n      ...approval,\n      approvedBy,\n      approvedAt: new Date().toISOString(),\n      approvalNotes: notes,\n      status: 'approved'\n    };\n\n    // Apply the visibility change\n    const result = await this._applyVisibility(approvalData);\n    \n    // Remove from pending approvals\n    this.pendingApprovals.delete(approvalId);\n\n    this.emit('visibilityApproved', approvalData);\n    \n    return result;\n  }\n\n  /**\n   * Reject visibility change\n   */\n  async rejectVisibilityChange(approvalId, rejectedBy, reason = '') {\n    const approval = this.pendingApprovals.get(approvalId);\n    \n    if (!approval) {\n      throw new Error(`Approval request ${approvalId} not found`);\n    }\n\n    const rejectionData = {\n      ...approval,\n      rejectedBy,\n      rejectedAt: new Date().toISOString(),\n      rejectionReason: reason,\n      status: 'rejected'\n    };\n\n    // Remove from pending approvals\n    this.pendingApprovals.delete(approvalId);\n\n    this.emit('visibilityRejected', rejectionData);\n    \n    return rejectionData;\n  }\n\n  /**\n   * Add visibility rule\n   */\n  addVisibilityRule(ruleId, rule) {\n    this._validateRule(rule);\n    this.visibilityRules.set(ruleId, {\n      ...rule,\n      createdAt: new Date().toISOString()\n    });\n    \n    this.emit('ruleAdded', { ruleId, rule });\n  }\n\n  /**\n   * Remove visibility rule\n   */\n  removeVisibilityRule(ruleId) {\n    const removed = this.visibilityRules.delete(ruleId);\n    if (removed) {\n      this.emit('ruleRemoved', { ruleId });\n    }\n    return removed;\n  }\n\n  /**\n   * Get user permissions\n   */\n  async getUserPermissions(userId) {\n    // In a real implementation, this would query user roles/permissions\n    // For now, return basic permissions\n    return {\n      userId,\n      roles: ['reviewer'],\n      permissions: [\n        VisibilityManager.ACCESS_LEVELS.READ,\n        VisibilityManager.ACCESS_LEVELS.WRITE\n      ],\n      visibilityLevels: ['internal', 'external']\n    };\n  }\n\n  /**\n   * Apply visibility rules to document\n   */\n  async applyVisibilityRules(documentId, documentMetadata) {\n    const applicableRules = this._findApplicableRules(documentMetadata);\n    \n    if (applicableRules.length === 0) {\n      return this.options.defaultVisibility;\n    }\n\n    // Apply rules in priority order\n    const sortedRules = applicableRules.sort((a, b) => (b.priority || 0) - (a.priority || 0));\n    \n    for (const rule of sortedRules) {\n      if (this._evaluateRuleConditions(rule, documentMetadata)) {\n        this.emit('ruleApplied', { \n          documentId, \n          ruleId: rule.id, \n          visibility: rule.visibility \n        });\n        \n        return rule.visibility;\n      }\n    }\n\n    return this.options.defaultVisibility;\n  }\n\n  /**\n   * Private methods\n   */\n\n  _validateVisibility(visibility) {\n    if (!this.options.allowedVisibilities.includes(visibility)) {\n      throw new Error(`Invalid visibility: ${visibility}. Allowed: ${this.options.allowedVisibilities.join(', ')}`);\n    }\n  }\n\n  _requiresApproval(visibility) {\n    return this.options.requireApprovalFor.includes(visibility);\n  }\n\n  async _requestApproval(visibilityData) {\n    const approvalId = `approval_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    \n    const approvalRequest = {\n      ...visibilityData,\n      approvalId,\n      status: 'pending',\n      requestedAt: new Date().toISOString()\n    };\n\n    this.pendingApprovals.set(approvalId, approvalRequest);\n    \n    this.emit('approvalRequested', approvalRequest);\n    \n    return {\n      success: true,\n      approvalId,\n      status: 'pending_approval',\n      message: `Visibility change to '${visibilityData.visibility}' requires approval`\n    };\n  }\n\n  async _applyVisibility(visibilityData) {\n    try {\n      // In a real implementation, this would update the database\n      // For now, emit the change event\n      \n      this.emit('visibilityChanged', {\n        documentId: visibilityData.documentId,\n        oldVisibility: visibilityData.previousVisibility?.visibility,\n        newVisibility: visibilityData.visibility,\n        changedBy: visibilityData.setBy,\n        changedAt: visibilityData.setAt,\n        reason: visibilityData.reason\n      });\n\n      return {\n        success: true,\n        documentId: visibilityData.documentId,\n        visibility: visibilityData.visibility,\n        appliedAt: new Date().toISOString()\n      };\n    } catch (error) {\n      this.emit('error', { \n        type: 'visibility_apply_failed', \n        documentId: visibilityData.documentId, \n        error: error.message \n      });\n      throw error;\n    }\n  }\n\n  _evaluateAccess(visibility, userPermissions, accessLevel) {\n    // Check if user has required access level\n    if (!userPermissions.permissions.includes(accessLevel)) {\n      return false;\n    }\n\n    // Check if user can access this visibility level\n    if (!userPermissions.visibilityLevels.includes(visibility.visibility)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  _validateRule(rule) {\n    if (!rule.conditions || !rule.visibility) {\n      throw new Error('Rule must have conditions and visibility');\n    }\n    \n    this._validateVisibility(rule.visibility);\n  }\n\n  _findApplicableRules(documentMetadata) {\n    return Array.from(this.visibilityRules.values()).filter(rule => {\n      return this._ruleMatchesDocument(rule, documentMetadata);\n    });\n  }\n\n  _ruleMatchesDocument(rule, documentMetadata) {\n    // Simple rule matching - can be extended for complex conditions\n    if (rule.conditions.sourceType && documentMetadata.sourceType !== rule.conditions.sourceType) {\n      return false;\n    }\n    \n    if (rule.conditions.fileType && documentMetadata.fileType !== rule.conditions.fileType) {\n      return false;\n    }\n    \n    if (rule.conditions.tags && rule.conditions.tags.length > 0) {\n      const documentTags = documentMetadata.tags || [];\n      const hasRequiredTags = rule.conditions.tags.every(tag => documentTags.includes(tag));\n      if (!hasRequiredTags) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  _evaluateRuleConditions(rule, documentMetadata) {\n    // Additional condition evaluation logic\n    // For now, if the rule matches the document, conditions are met\n    return true;\n  }\n}\n\nmodule.exports = VisibilityManager;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAEtC;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,SAASF,YAAY,CAAC;EAC3CG,WAAWA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IACxB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACA,OAAO,GAAG;MACbC,iBAAiB,EAAE,UAAU;MAC7BC,mBAAmB,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,CAAC;MACrEC,kBAAkB,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC;MAC1C,GAAGH;IACL,CAAC;IAED,IAAI,CAACI,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;IAChC,IAAI,CAACC,cAAc,GAAG,IAAID,GAAG,CAAC,CAAC;IAC/B,IAAI,CAACE,gBAAgB,GAAG,IAAIF,GAAG,CAAC,CAAC;EACnC;;EAEA;AACF;AACA;EACE,OAAOG,iBAAiB,GAAG;IACzBC,QAAQ,EAAE,UAAU;IAAM;IAC1BC,QAAQ,EAAE,UAAU;IAAM;IAC1BC,UAAU,EAAE,YAAY;IAAE;IAC1BC,MAAM,EAAE,QAAQ;IAAU;IAC1BC,KAAK,EAAE,OAAO;IAAW;IACzBC,QAAQ,EAAE,UAAU,CAAM;EAC5B,CAAC;;EAED;AACF;AACA;EACE,OAAOC,aAAa,GAAG;IACrBC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,OAAO;IACdC,OAAO,EAAE;EACX,CAAC;;EAED;AACF;AACA;EACE,MAAMC,qBAAqBA,CAACC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,GAAG,CAAC,CAAC,EAAE;IACjE,IAAI,CAACC,mBAAmB,CAACF,UAAU,CAAC;IAEpC,MAAMG,cAAc,GAAG;MACrBJ,UAAU;MACVC,UAAU;MACVI,kBAAkB,EAAE,MAAM,IAAI,CAACC,qBAAqB,CAACN,UAAU,CAAC;MAChEO,KAAK,EAAEL,QAAQ,CAACM,MAAM,IAAI,QAAQ;MAClCC,KAAK,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC/BC,MAAM,EAAEV,QAAQ,CAACU,MAAM,IAAI,eAAe;MAC1CC,gBAAgB,EAAE,IAAI,CAACC,iBAAiB,CAACb,UAAU,CAAC;MACpDC;IACF,CAAC;;IAED;IACA,IAAIE,cAAc,CAACS,gBAAgB,EAAE;MACnC,OAAO,MAAM,IAAI,CAACE,gBAAgB,CAACX,cAAc,CAAC;IACpD;;IAEA;IACA,OAAO,MAAM,IAAI,CAACY,gBAAgB,CAACZ,cAAc,CAAC;EACpD;;EAEA;AACF;AACA;EACE,MAAME,qBAAqBA,CAACN,UAAU,EAAE;IACtC,IAAI;MACF;MACA;MACA,OAAO;QACLA,UAAU;QACVC,UAAU,EAAE,IAAI,CAACtB,OAAO,CAACC,iBAAiB;QAC1C2B,KAAK,EAAE,QAAQ;QACfE,KAAK,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC/BM,cAAc,EAAE;MAClB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE;QACjBC,IAAI,EAAE,yBAAyB;QAC/BpB,UAAU;QACVkB,KAAK,EAAEA,KAAK,CAACG;MACf,CAAC,CAAC;MACF,MAAMH,KAAK;IACb;EACF;;EAEA;AACF;AACA;EACE,MAAMI,WAAWA,CAACtB,UAAU,EAAEQ,MAAM,EAAEe,WAAW,GAAG9C,iBAAiB,CAACiB,aAAa,CAACC,IAAI,EAAE;IACxF,IAAI;MACF,MAAMM,UAAU,GAAG,MAAM,IAAI,CAACK,qBAAqB,CAACN,UAAU,CAAC;MAC/D,MAAMwB,eAAe,GAAG,MAAM,IAAI,CAACC,kBAAkB,CAACjB,MAAM,CAAC;MAE7D,OAAO,IAAI,CAACkB,eAAe,CAACzB,UAAU,EAAEuB,eAAe,EAAED,WAAW,CAAC;IACvE,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE;QACjBC,IAAI,EAAE,qBAAqB;QAC3BpB,UAAU;QACVQ,MAAM;QACNU,KAAK,EAAEA,KAAK,CAACG;MACf,CAAC,CAAC;MACF,OAAO,KAAK;IACd;EACF;;EAEA;AACF;AACA;EACE,MAAMM,oBAAoBA,CAACC,OAAO,EAAE1B,QAAQ,GAAG,CAAC,CAAC,EAAE;IACjD,MAAM2B,OAAO,GAAG,EAAE;IAClB,MAAMC,MAAM,GAAG,EAAE;IAEjB,KAAK,MAAMC,MAAM,IAAIH,OAAO,EAAE;MAC5B,IAAI;QACF,MAAMI,MAAM,GAAG,MAAM,IAAI,CAACjC,qBAAqB,CAC7CgC,MAAM,CAAC/B,UAAU,EACjB+B,MAAM,CAAC9B,UAAU,EACjB;UAAE,GAAGC,QAAQ;UAAE,GAAG6B,MAAM,CAAC7B;QAAS,CACpC,CAAC;QACD2B,OAAO,CAACI,IAAI,CAACD,MAAM,CAAC;MACtB,CAAC,CAAC,OAAOd,KAAK,EAAE;QACdY,MAAM,CAACG,IAAI,CAAC;UACVjC,UAAU,EAAE+B,MAAM,CAAC/B,UAAU;UAC7BkB,KAAK,EAAEA,KAAK,CAACG;QACf,CAAC,CAAC;MACJ;IACF;IAEA,IAAI,CAACF,IAAI,CAAC,YAAY,EAAE;MACtBe,UAAU,EAAEL,OAAO,CAACM,MAAM;MAC1BC,MAAM,EAAEN,MAAM,CAACK,MAAM;MACrBL;IACF,CAAC,CAAC;IAEF,OAAO;MAAED,OAAO;MAAEC;IAAO,CAAC;EAC5B;;EAEA;AACF;AACA;EACE,MAAMO,mBAAmBA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IACtC,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACvD,gBAAgB,CAACwD,MAAM,CAAC,CAAC,CAAC;IAE1D,IAAIC,QAAQ,GAAGJ,OAAO;IAEtB,IAAID,OAAO,CAACrC,UAAU,EAAE;MACtB0C,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC5C,UAAU,KAAKqC,OAAO,CAACrC,UAAU,CAAC;IAC5E;IAEA,IAAIqC,OAAO,CAACQ,WAAW,EAAE;MACvBH,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACtC,KAAK,KAAK+B,OAAO,CAACQ,WAAW,CAAC;IACxE;IAEA,IAAIR,OAAO,CAACS,KAAK,EAAE;MACjB,MAAMA,KAAK,GAAG,IAAIrC,IAAI,CAAC4B,OAAO,CAACS,KAAK,CAAC;MACrCJ,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAI,IAAInC,IAAI,CAACmC,IAAI,CAACpC,KAAK,CAAC,IAAIsC,KAAK,CAAC;IACnE;IAEA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIxC,IAAI,CAACwC,CAAC,CAACzC,KAAK,CAAC,GAAG,IAAIC,IAAI,CAACuC,CAAC,CAACxC,KAAK,CAAC,CAAC;EACvE;;EAEA;AACF;AACA;EACE,MAAM0C,uBAAuBA,CAACC,UAAU,EAAEC,UAAU,EAAEC,KAAK,GAAG,EAAE,EAAE;IAChE,MAAMC,QAAQ,GAAG,IAAI,CAACrE,gBAAgB,CAACsE,GAAG,CAACJ,UAAU,CAAC;IAEtD,IAAI,CAACG,QAAQ,EAAE;MACb,MAAM,IAAIE,KAAK,CAAC,oBAAoBL,UAAU,YAAY,CAAC;IAC7D;IAEA,MAAMM,YAAY,GAAG;MACnB,GAAGH,QAAQ;MACXF,UAAU;MACVM,UAAU,EAAE,IAAIjD,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpCiD,aAAa,EAAEN,KAAK;MACpBO,MAAM,EAAE;IACV,CAAC;;IAED;IACA,MAAM7B,MAAM,GAAG,MAAM,IAAI,CAAChB,gBAAgB,CAAC0C,YAAY,CAAC;;IAExD;IACA,IAAI,CAACxE,gBAAgB,CAAC4E,MAAM,CAACV,UAAU,CAAC;IAExC,IAAI,CAACjC,IAAI,CAAC,oBAAoB,EAAEuC,YAAY,CAAC;IAE7C,OAAO1B,MAAM;EACf;;EAEA;AACF;AACA;EACE,MAAM+B,sBAAsBA,CAACX,UAAU,EAAEY,UAAU,EAAEpD,MAAM,GAAG,EAAE,EAAE;IAChE,MAAM2C,QAAQ,GAAG,IAAI,CAACrE,gBAAgB,CAACsE,GAAG,CAACJ,UAAU,CAAC;IAEtD,IAAI,CAACG,QAAQ,EAAE;MACb,MAAM,IAAIE,KAAK,CAAC,oBAAoBL,UAAU,YAAY,CAAC;IAC7D;IAEA,MAAMa,aAAa,GAAG;MACpB,GAAGV,QAAQ;MACXS,UAAU;MACVE,UAAU,EAAE,IAAIxD,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpCwD,eAAe,EAAEvD,MAAM;MACvBiD,MAAM,EAAE;IACV,CAAC;;IAED;IACA,IAAI,CAAC3E,gBAAgB,CAAC4E,MAAM,CAACV,UAAU,CAAC;IAExC,IAAI,CAACjC,IAAI,CAAC,oBAAoB,EAAE8C,aAAa,CAAC;IAE9C,OAAOA,aAAa;EACtB;;EAEA;AACF;AACA;EACEG,iBAAiBA,CAACC,MAAM,EAAEC,IAAI,EAAE;IAC9B,IAAI,CAACC,aAAa,CAACD,IAAI,CAAC;IACxB,IAAI,CAACvF,eAAe,CAACyF,GAAG,CAACH,MAAM,EAAE;MAC/B,GAAGC,IAAI;MACPG,SAAS,EAAE,IAAI/D,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC,CAAC;IAEF,IAAI,CAACQ,IAAI,CAAC,WAAW,EAAE;MAAEkD,MAAM;MAAEC;IAAK,CAAC,CAAC;EAC1C;;EAEA;AACF;AACA;EACEI,oBAAoBA,CAACL,MAAM,EAAE;IAC3B,MAAMM,OAAO,GAAG,IAAI,CAAC5F,eAAe,CAAC+E,MAAM,CAACO,MAAM,CAAC;IACnD,IAAIM,OAAO,EAAE;MACX,IAAI,CAACxD,IAAI,CAAC,aAAa,EAAE;QAAEkD;MAAO,CAAC,CAAC;IACtC;IACA,OAAOM,OAAO;EAChB;;EAEA;AACF;AACA;EACE,MAAMlD,kBAAkBA,CAACjB,MAAM,EAAE;IAC/B;IACA;IACA,OAAO;MACLA,MAAM;MACNoE,KAAK,EAAE,CAAC,UAAU,CAAC;MACnBC,WAAW,EAAE,CACXpG,iBAAiB,CAACiB,aAAa,CAACC,IAAI,EACpClB,iBAAiB,CAACiB,aAAa,CAACE,KAAK,CACtC;MACDkF,gBAAgB,EAAE,CAAC,UAAU,EAAE,UAAU;IAC3C,CAAC;EACH;;EAEA;AACF;AACA;EACE,MAAMC,oBAAoBA,CAAC/E,UAAU,EAAEgF,gBAAgB,EAAE;IACvD,MAAMC,eAAe,GAAG,IAAI,CAACC,oBAAoB,CAACF,gBAAgB,CAAC;IAEnE,IAAIC,eAAe,CAAC9C,MAAM,KAAK,CAAC,EAAE;MAChC,OAAO,IAAI,CAACxD,OAAO,CAACC,iBAAiB;IACvC;;IAEA;IACA,MAAMuG,WAAW,GAAGF,eAAe,CAACjC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACA,CAAC,CAACkC,QAAQ,IAAI,CAAC,KAAKnC,CAAC,CAACmC,QAAQ,IAAI,CAAC,CAAC,CAAC;IAEzF,KAAK,MAAMd,IAAI,IAAIa,WAAW,EAAE;MAC9B,IAAI,IAAI,CAACE,uBAAuB,CAACf,IAAI,EAAEU,gBAAgB,CAAC,EAAE;QACxD,IAAI,CAAC7D,IAAI,CAAC,aAAa,EAAE;UACvBnB,UAAU;UACVqE,MAAM,EAAEC,IAAI,CAACgB,EAAE;UACfrF,UAAU,EAAEqE,IAAI,CAACrE;QACnB,CAAC,CAAC;QAEF,OAAOqE,IAAI,CAACrE,UAAU;MACxB;IACF;IAEA,OAAO,IAAI,CAACtB,OAAO,CAACC,iBAAiB;EACvC;;EAEA;AACF;AACA;;EAEEuB,mBAAmBA,CAACF,UAAU,EAAE;IAC9B,IAAI,CAAC,IAAI,CAACtB,OAAO,CAACE,mBAAmB,CAAC0G,QAAQ,CAACtF,UAAU,CAAC,EAAE;MAC1D,MAAM,IAAIwD,KAAK,CAAC,uBAAuBxD,UAAU,cAAc,IAAI,CAACtB,OAAO,CAACE,mBAAmB,CAAC2G,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IAC/G;EACF;EAEA1E,iBAAiBA,CAACb,UAAU,EAAE;IAC5B,OAAO,IAAI,CAACtB,OAAO,CAACG,kBAAkB,CAACyG,QAAQ,CAACtF,UAAU,CAAC;EAC7D;EAEA,MAAMc,gBAAgBA,CAACX,cAAc,EAAE;IACrC,MAAMgD,UAAU,GAAG,YAAY1C,IAAI,CAAC+E,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IAEtF,MAAMC,eAAe,GAAG;MACtB,GAAG1F,cAAc;MACjBgD,UAAU;MACVS,MAAM,EAAE,SAAS;MACjBkC,WAAW,EAAE,IAAIrF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACtC,CAAC;IAED,IAAI,CAACzB,gBAAgB,CAACsF,GAAG,CAACpB,UAAU,EAAE0C,eAAe,CAAC;IAEtD,IAAI,CAAC3E,IAAI,CAAC,mBAAmB,EAAE2E,eAAe,CAAC;IAE/C,OAAO;MACLE,OAAO,EAAE,IAAI;MACb5C,UAAU;MACVS,MAAM,EAAE,kBAAkB;MAC1BxC,OAAO,EAAE,yBAAyBjB,cAAc,CAACH,UAAU;IAC7D,CAAC;EACH;EAEA,MAAMe,gBAAgBA,CAACZ,cAAc,EAAE;IACrC,IAAI;MACF;MACA;;MAEA,IAAI,CAACe,IAAI,CAAC,mBAAmB,EAAE;QAC7BnB,UAAU,EAAEI,cAAc,CAACJ,UAAU;QACrCiG,aAAa,EAAE7F,cAAc,CAACC,kBAAkB,EAAEJ,UAAU;QAC5DiG,aAAa,EAAE9F,cAAc,CAACH,UAAU;QACxCkG,SAAS,EAAE/F,cAAc,CAACG,KAAK;QAC/B6F,SAAS,EAAEhG,cAAc,CAACK,KAAK;QAC/BG,MAAM,EAAER,cAAc,CAACQ;MACzB,CAAC,CAAC;MAEF,OAAO;QACLoF,OAAO,EAAE,IAAI;QACbhG,UAAU,EAAEI,cAAc,CAACJ,UAAU;QACrCC,UAAU,EAAEG,cAAc,CAACH,UAAU;QACrCoG,SAAS,EAAE,IAAI3F,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;IACH,CAAC,CAAC,OAAOO,KAAK,EAAE;MACd,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE;QACjBC,IAAI,EAAE,yBAAyB;QAC/BpB,UAAU,EAAEI,cAAc,CAACJ,UAAU;QACrCkB,KAAK,EAAEA,KAAK,CAACG;MACf,CAAC,CAAC;MACF,MAAMH,KAAK;IACb;EACF;EAEAQ,eAAeA,CAACzB,UAAU,EAAEuB,eAAe,EAAED,WAAW,EAAE;IACxD;IACA,IAAI,CAACC,eAAe,CAACqD,WAAW,CAACU,QAAQ,CAAChE,WAAW,CAAC,EAAE;MACtD,OAAO,KAAK;IACd;;IAEA;IACA,IAAI,CAACC,eAAe,CAACsD,gBAAgB,CAACS,QAAQ,CAACtF,UAAU,CAACA,UAAU,CAAC,EAAE;MACrE,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb;EAEAsE,aAAaA,CAACD,IAAI,EAAE;IAClB,IAAI,CAACA,IAAI,CAACgC,UAAU,IAAI,CAAChC,IAAI,CAACrE,UAAU,EAAE;MACxC,MAAM,IAAIwD,KAAK,CAAC,0CAA0C,CAAC;IAC7D;IAEA,IAAI,CAACtD,mBAAmB,CAACmE,IAAI,CAACrE,UAAU,CAAC;EAC3C;EAEAiF,oBAAoBA,CAACF,gBAAgB,EAAE;IACrC,OAAOxC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC1D,eAAe,CAAC2D,MAAM,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC0B,IAAI,IAAI;MAC9D,OAAO,IAAI,CAACiC,oBAAoB,CAACjC,IAAI,EAAEU,gBAAgB,CAAC;IAC1D,CAAC,CAAC;EACJ;EAEAuB,oBAAoBA,CAACjC,IAAI,EAAEU,gBAAgB,EAAE;IAC3C;IACA,IAAIV,IAAI,CAACgC,UAAU,CAACE,UAAU,IAAIxB,gBAAgB,CAACwB,UAAU,KAAKlC,IAAI,CAACgC,UAAU,CAACE,UAAU,EAAE;MAC5F,OAAO,KAAK;IACd;IAEA,IAAIlC,IAAI,CAACgC,UAAU,CAACG,QAAQ,IAAIzB,gBAAgB,CAACyB,QAAQ,KAAKnC,IAAI,CAACgC,UAAU,CAACG,QAAQ,EAAE;MACtF,OAAO,KAAK;IACd;IAEA,IAAInC,IAAI,CAACgC,UAAU,CAACI,IAAI,IAAIpC,IAAI,CAACgC,UAAU,CAACI,IAAI,CAACvE,MAAM,GAAG,CAAC,EAAE;MAC3D,MAAMwE,YAAY,GAAG3B,gBAAgB,CAAC0B,IAAI,IAAI,EAAE;MAChD,MAAME,eAAe,GAAGtC,IAAI,CAACgC,UAAU,CAACI,IAAI,CAACG,KAAK,CAACC,GAAG,IAAIH,YAAY,CAACpB,QAAQ,CAACuB,GAAG,CAAC,CAAC;MACrF,IAAI,CAACF,eAAe,EAAE;QACpB,OAAO,KAAK;MACd;IACF;IAEA,OAAO,IAAI;EACb;EAEAvB,uBAAuBA,CAACf,IAAI,EAAEU,gBAAgB,EAAE;IAC9C;IACA;IACA,OAAO,IAAI;EACb;AACF;AAEA+B,MAAM,CAACC,OAAO,GAAGvI,iBAAiB","ignoreList":[]}